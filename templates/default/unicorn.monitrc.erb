check process unicorn_<%= @app_name %>
  with pidfile <%= @tmp_path %>/pids/unicorn.pid
  group unicorn
  group unicorn_<%= @app_name %>

  start program = "/bin/su <%= @user %> -l && /bin/bash -c 'cd <%= @app_path %>; RAILS_ENV=<%= @rails_env %> /data/bin/rbenv-exec bundle exec unicorn_rails -l <%= @tmp_path %>/sockets/unicorn.sock -c <%= @app_path %>/config/unicorn/<%= @rails_env %>.rb -D -E <%= @rails_env %>'" with timeout 30 seconds
  stop program = "/bin/bash -c 'kill -QUIT `cat <%= @tmp_path %>/pids/unicorn.pid`'" with timeout 30 seconds

  if failed unixsocket <%= @tmp_path %>/sockets/unicorn.sock then restart
  if 2 restarts within 15 cycles then timeout
  if totalmem is greater than <%= @totalmem || 600 %> MB then restart

# Enable if using strategy to restart based on tmp/restart.txt
#check file unicorn_<%= @app_name %>_restart with path <%= @tmp_path %>/restart.txt
#    if changed timestamp
#      then exec "/bin/bash -c 'monit -g <%= @app_name %> restart all && kill -s USR2 `cat <%= @tmp_path %>/pids/unicorn.pid`'"
